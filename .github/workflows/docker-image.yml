name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Setting up .env
        run: |
          echo "${{ secrets.SCHEDULE_PRODUCTION_ENV }}" > .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Generate timestamp-based tag
        id: tag
        run: echo "TIMESTAMP_TAG=$(date +'%y%m%d')" >> $GITHUB_ENV

      - name: Build Docker image (Laravel)
        run: |
          docker build --no-cache -t alvarobk/scheduleapp:${{ env.TIMESTAMP_TAG }} .

      - name: Build Docker image (Nginx)
        run: |
          docker build --no-cache -t alvarobk/schedulenginx:${{ env.TIMESTAMP_TAG }} ./docker/nginx

      - name: Scan Laravel Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: alvarobk/scheduleapp:${{ env.TIMESTAMP_TAG }}
          format: 'table'
          vuln-type: 'os,library'
          severity: 'MEDIUM,HIGH,CRITICAL'
          scanners: 'vuln'  # Disable secret scanning

      - name: Scan Nginx Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: alvarobk/schedulenginx:${{ env.TIMESTAMP_TAG }}
          format: 'table'
          vuln-type: 'os,library'
          severity: 'MEDIUM,HIGH,CRITICAL'
          scanners: 'vuln'  # Disable secret scanning

      - name: Docker push images
        run: |
          docker push alvarobk/scheduleapp:${{ env.TIMESTAMP_TAG }}
          docker push alvarobk/schedulenginx:${{ env.TIMESTAMP_TAG }}

      - name: Scan JavaScript dependencies for vulnerabilities with npm audit
        run: npm audit --audit-level=high


      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          format: 'table'
          languages: 'javascript'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       

      - name: Psalm Security Scan
        uses: psalm/psalm-github-security-scan@1.4.0
        with:
            format: 'table'
        
      - name: Import Security Analysis results into GitHub Security Code Scanning
        uses: psalm/psalm-github-security-scan@1.4.0
        with:
          sarif_file: results.sarif
          format: 'table'
      

      - name: Set up Docker Compose
        run: |
         docker-compose up -d

      - name: StackHawk HawkScan Action   
        uses: stackhawk/hawkscan-action@v2.1.3
        with:
          apiKey: ${{ secrets.HAWK_API_KEY }}        
      - name: teste
        uses: actions/checkout@v2
        id: cache-db
        with:
            path: ~/.symfony/cache
            key: db
      - uses: symfonycorp/security-checker-action@v5

      
      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@v2.3.0 # Ex: v2.1.0, See the latest version at https://github.com/marketplace/actions/sonarcloud-scan
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   with:
      #       args: >
      #             Dsonar.organization:alvarobk
      #             Dsonar.projectKey:AlvaroBk_schedule-web-app
                  

       
    
        

